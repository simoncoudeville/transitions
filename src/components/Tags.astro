---
const { tags, currentPath, amount } = Astro.props;
---

<header class="header" transition:name="header">
  <nav class="tags">
    <ul class="tags__list list-reset">
      <li class="tags__item">
        <a
          class={currentPath === ""
            ? "tags__link tags__link--active"
            : "tags__link"}
          href="/"
        >
          All</a
        >
      </li>
      {
        tags.map((tag) => (
          <li>
            <a
              class={
                currentPath === tag
                  ? "tags__link tags__link--active"
                  : "tags__link"
              }
              href={`/${tag}`}
            >
              {tag}
            </a>
          </li>
        ))
      }
    </ul>
  </nav>
  <p class="header__amount color-meta">
    {amount} products
  </p>
</header>

<style is:global>
  .header {
    position: sticky;
    top: 0;
    right: 0;
    left: 0;
    background-color: var(--global-backgroundColor);
    /* display: flex;
    align-items: center;
    justify-content: space-between; */
    display: grid;
    /* grid-template-columns: 1fr auto 1fr; */
    grid-template-columns: auto 1fr;
    align-items: center;
    /* padding: 0.25rem 1.75rem; */
    padding: 0.25rem 1.75rem 0.25rem 1rem;
    margin-bottom: -0.25rem;
    z-index: 200;
    contain: layout paint;
  }

  .header__amount {
    justify-self: end;
  }

  .tags__list {
    display: flex;
    flex-wrap: wrap;
  }

  .tags__link {
    display: block;
    padding: 1rem 0.75rem;
    border-radius: var(--global-borderRadius);
    color: var(--global-meta-color);
  }

  .tags__link:hover,
  .tags__link--active {
    color: var(--global-text-color);
  }

  ::view-transition-new(header) {
    animation: none;
    mix-blend-mode: normal;
  }

  ::view-transition-old(header) {
    animation: none;
    mix-blend-mode: normal;
  }

  ::view-transition-new(header):only-child {
    animation:
      var(--global-animation-duration-fast) linear
        var(--global-animation-duration-fast) both fade-in,
      var(--global-animation-duration-fast) var(--global-easeOut)
        var(--global-animation-duration-fast) both slide-from-top;
  }

  ::view-transition-old(header):only-child {
    animation:
      var(--global-animation-duration-fast) linear both fade-out,
      var(--global-animation-duration-fast) var(--global-easeIn) both
        slide-to-top;
  }
</style>

<script>
  const handleTagLink = () => {
    console.log("clicked");
    let itemImages = document.querySelectorAll(".item__img");
    itemImages.forEach((itemImage) => {
      itemImage.style.setProperty("view-transition-name", "none");
      // remove the data-astro-transition-scope attribute
      // itemImage.removeAttribute("data-astro-transition-scope");
      // remove the view-transition-name style
      // itemImage.style.removeProperty("view-transition-name");

      // remove the view-transition-scope style while view transition is busy
      // itemImage.addEventListener("view-transition-start", () => {
      //   // itemImage.style.removeProperty("view-transition-scope");
      //   // itemImage.style.removeProperty("view-transition-name");
      //   // set the css view-transition-name property to the value none
      //   itemImage.style.setProperty("view-transition-name", "none");

      //   // remove the property after the transition is done
      //   itemImage.addEventListener("view-transition-end", () => {
      //     itemImage.style.removeProperty("view-transition-name");
      //   });
      // });
      // let transition = document.startViewTransition(() => {
      //   itemImage.style.setProperty("view-transition-name", "none");
      // });

      // transition.ready.then(() => {
      //   itemImage.style.setProperty("view-transition-name", "none");
      // });
    });
  };

  document.addEventListener("astro:page-load", () => {
    let tagLinks = document.querySelectorAll(".tags__link");
    // handleTagLink();
    tagLinks.forEach((tagLink) => {
      tagLink.addEventListener("click", handleTagLink);
    });
  });
</script>
