---
const { tags, currentPath, amount } = Astro.props;
---

<header class="header">
  <h1 class="header__logo font-size-base">Rams</h1>
  <nav class="tags">
    <ul class="tags__list list-reset">
      <li class="tags__item">
        <a
          class={currentPath === ""
            ? "tags__link tags__link--active"
            : "tags__link"}
          href="/"
        >
          all</a
        >
      </li>
      {
        tags.map((tag) => (
          <li>
            <a
              class={
                currentPath === tag
                  ? "tags__link tags__link--active"
                  : "tags__link"
              }
              href={`/${tag}`}
            >
              {tag}
            </a>
          </li>
        ))
      }
    </ul>
    <button class="tags__button"> tags</button>
  </nav>
  <p class="header__amount color-meta">
    {amount} products
  </p>
</header>

<script>
  const handleTagLink = () => {
    let itemImages = document.querySelectorAll(".item__img");
    itemImages.forEach((itemImage) => {
      // itemImage.style.setProperty("view-transition-name", "none");
      // remove the data-astro-transition-scope attribute
      // itemImage.removeAttribute("data-astro-transition-scope");
      // remove the view-transition-name style
      // itemImage.style.removeProperty("view-transition-name");
      // remove the view-transition-scope style while view transition is busy
      // itemImage.addEventListener("view-transition-start", () => {
      //   // itemImage.style.removeProperty("view-transition-scope");
      //   // itemImage.style.removeProperty("view-transition-name");
      //   // set the css view-transition-name property to the value none
      //   itemImage.style.setProperty("view-transition-name", "none");
      //   // remove the property after the transition is done
      //   itemImage.addEventListener("view-transition-end", () => {
      //     itemImage.style.removeProperty("view-transition-name");
      //   });
      // });
      // let transition = document.startViewTransition(() => {
      //   itemImage.style.setProperty("view-transition-name", "none");
      // });
      // transition.ready.then(() => {
      //   itemImage.style.setProperty("view-transition-name", "none");
      // });
    });
  };

  document.addEventListener("astro:page-load", () => {
    let tagLinks = document.querySelectorAll(".tags__link");
    // handleTagLink();
    tagLinks.forEach((tagLink) => {
      tagLink.addEventListener("click", handleTagLink);
    });
  });
</script>
